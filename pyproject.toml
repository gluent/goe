[project]
name = "goe"
version = "1.0.1-dev"
readme = "README.md"
requires-python = ">=3.7"
maintainers = [
  {name = "Neil Johnson", email = "neil@thirdchimp.net"},
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Operating System :: OS Independent"
]
dependencies = [
    # Core packages
    "pyarrow",
    "avro",
    "configparser",
    "cryptography",
    "filelock",
    "lark-parser",
    "numpy",
    "orjson",
    "python-dateutil",
    "PyYAML",
    "requests",
    "requests-kerberos",
    "termcolor",
    "urllib3",

    # For Cloud storage
    "google-cloud-storage",
    "boto3",
    "azure-common",
    "azure-storage-blob",

    # For Oracle frontend
    "cx-Oracle",

    # For BigQuery backend
    "google-cloud-bigquery",
    "google-cloud-kms",

    # GOE Listener packages
    "fastapi==0.77.0",
    "uvicorn==0.17.6",
    "redis==4.3.1",
    "gunicorn==20.1.0",
    #git+ssh://git@bitbucket.org/gluent/gluentlib-contrib.git
    "brotli==1.0.9",
    "tenacity==8.0.1",
    "uvloop",
    "httptools",
]

[project.urls]
Homepage = "https://github.com/gluent/goe"
Issues = "https://github.com/gluent/goe/issues"

[project.optional-dependencies]
hadoop = [
    "hdfs",
    "impyla",
    "thrift-sasl",
]
snowflake = [
    "snowflake-connector-python",
]
sql_server = [
    # For SQL Server frontend
    # If we do this for real we should switch to pyodbc
    "pymssql",
]
synapse = [
    "pyodbc",
]
teradata = [
    "pyodbc",
]
dev = [
    "black",
    "nox",
    "pytest",
    "pytest-xdist",
]
test = [
    "nox",
    "pytest",
    "pytest-xdist",
]

[build-system]
requires = ["setuptools >= 40.6.0", "wheel"]
build-backend = "setuptools.build_meta"

