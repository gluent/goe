# Copyright 2016 The GOE Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[project]
name = "goe-framework"
version = "1.0.8"
readme = "README.md"
requires-python = ">=3.7"
maintainers = [
  {name = "Neil Johnson", email = "neiljohnson@google.com"},
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Operating System :: OS Independent"
]
dependencies = [
    # Core packages
    "pyarrow",
    "avro",
    "configparser",
    "cryptography",
    "filelock",
    "lark-parser",
    "numpy",
    "orjson",
    "python-dateutil",
    "PyYAML",
    "requests",
    "termcolor",
    "urllib3",

    # For Cloud storage
    "fsspec[gcs]",
    "google-cloud-storage",
    "boto3",
    "azure-common",
    "azure-storage-blob",

    # For Oracle frontend
    "cx-Oracle",

    # For BigQuery backend
    "google-cloud-bigquery",
    "google-cloud-kms",

    # Env loading
    "python-dotenv",

    # GOE Listener packages
    "fastapi==0.77.0",
    "uvicorn==0.17.6",
    "redis==4.4.4",
    "gunicorn==20.1.0",
    "brotli==1.0.9",
    "tenacity==8.0.1",
    "uvloop",
    "httptools",
]

[project.urls]
Homepage = "https://github.com/gluent/goe"
Issues = "https://github.com/gluent/goe/issues"

[project.optional-dependencies]
hadoop = [
    "hdfs",
    "impyla",
    "requests-kerberos",
    "thrift-sasl",
]
snowflake = [
    "snowflake-connector-python",
]
sql_server = [
    # For SQL Server frontend
    # If we do this for real we should switch to pyodbc
    "pymssql",
]
synapse = [
    "pyodbc",
]
teradata = [
    "pyodbc",
]
dev = [
    "black",
    "nox",
    "pytest",
    "pytest-xdist",
]
test = [
    "nox",
    "pytest",
    "pytest-xdist",
]

[build-system]
requires = ["setuptools >= 40.6.0", "wheel"]
build-backend = "setuptools.build_meta"

